@model GemaltoWebSurvey.Models.Survey

@{
    ViewBag.Title = "Create";
}

<h2>Customer Satisfaction Survey</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Survey</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Recommendation, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Recommendation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Recommendation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Satisfaction, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.Satisfaction,
                                  new SelectList(Model.GetSatisfactionLevels()),
                                  "-- Select Response --",
                                  new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Satisfaction, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.ListBoxFor(model => model.ProductDescription,
                                  new MultiSelectList(Model.GetProductDescriptionOptions()),
                                  new { size = Model.GetProductDescriptionOptions().Count, @class = "form-control" })

            @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Suitability, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">

            @Html.ValidationMessageFor(model => model.Suitability, "", new { @class = "text-danger" })
            @Html.DropDownListFor(model => model.Suitability,
                       new SelectList(Model.GetSuitabilityOptions()),
                       "-- Select Response --",
                       new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Suitability, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductQuality, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.ProductQuality,
                                  new SelectList(Model.GetQualityOptions()),
                                  "-- Select Response --",
                                  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductQuality, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValueForMoney, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.ValueForMoney,
                                  new SelectList(Model.GetValueForMoneyOptions()),
                                  "-- Select Response --",
                                  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ValueForMoney, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Responsiveness, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.Responsiveness,
                                  new SelectList(Model.GetResponsivenessOptions()),
                                  "-- Select Response --",
                                  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Responsiveness, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerHistory, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.CustomerHistory,
                                  new SelectList(Model.GetTimeAsCustomerOptions()),
                                  "-- Select Response --",
                                  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerHistory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Repurchase, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.Repurchase,
                                  new SelectList(Model.GetRepurchaseLikelihoodOptions()),
                                  "-- Select Response --",
                                  new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Repurchase, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
